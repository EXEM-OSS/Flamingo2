###########################################
## Application Specific Configuration
###########################################

# 로그인시 좌측 상단에 표시하는 애플리케이션의 타이틀 문자열.
# -Dapplication.top -Dapplication.title룰 통해 변경할 수 있다.
# 아래 값은 편의상 제공되나 기본적으로 Cloudine, Inc.의 허가없이 변경할 수 없으며 임의로 변경시 라이센스 위반에 해당한다.
# 아래 문구를 변경할 수 있는 권한은 Cloudine, Inc.의 OEM 라이센스만 가능하다.
# Application text title displayed in the upper left corner after logged in
# Modifiable via parameters, -Dapplication.top and -Dapplication.title
# The following title is NOT editable without permission from Cloudine, Inc. Modifying the title without permission violates the license policy.
# Only Cloudine, Inc. holds the right to modify the title. If you wishes to customize the tile, you must purchas the OEM license from Cloudine, Inc.
application.top=Flamingo 2 Big Data Platform By Cloudine, Inc.
application.title=Flamingo 2 Big Data Platform

# 문자열로 된 타이틀 대신 이미지로 표시하고자 하는 경우 아래를 사용한다.
# If you wish to use an image instead of text, uncomment below option.
# application.title=<img src="/resources/images/logo.png" style="position: absolute; top: 5px; left: 9px;">

# 웹 페이지 및 클라이언트에서 자바 스크립트를 디버깅용 자바스크립트를 적용하고자 하는 경우 development로 지정한다.
# 이 옵션을 끄려면 production으로 지정하도록 한다.
# In order to debug javascript, set the following option to development
# Otherwise, set it to production.
application.mode=development

# ExtJS의 Ajax Caching 사용 여부.
# 기본값은 true이며 이 값을 true로 사용하는 경우 모든 Ajax 요청에 _dc 파라미터가 붙게 되어 캐슁하지 않는다.
# 운영시 이 값을 false로 설정하면 ExtJS가 페이지의 .js 파일을 캐슁함으로써 불필요한 요청을 방지할 수 있으나 캐슁이 되므로 ExtJS의 .js 파일을 변경하는 경우 반영되지 않을 수 있다.
# ExtJS Ajax Caching
# It is set to true by default, and when it's true, _dc parameter is added to disable caching.
# If it is set to false, javascript files are cached, but it might not be applied after the javascript files are modified.
web.extjs.ajax.disable.cache=true

# ExtJS의 Ajax Timeout.
# ExtJS Ajax Timeout
web.ajax.timeout=120000

# Flamingo의 알람 팝업창의 사용 여부 (실험용).
# Use notification pop-up in Flamingo
web.notification.autoupadate=true

# Flamingo의 알람 팝업창의 갱신 주기 (실험용).
# Notification pop-up renewal cycle
web.notification.update=5000

# HTML의 NoCache 적용 여부.
# 기본값은 false이며 NoCache를 적용하는 경우 true로 변경한다.
# Use HTML NoCache
# False by default. Set it to true to use NoCache
html.nocache=true

# YARN Application 유형.
# YARN Application의 유형이 추가되는 경우 여기에 추가한다.
# YARN Application Type
# Add YARN application types here.
web.yarn.application.types=MAPREDUCE,SPARK,org.apache.slider

# 기본 언어.
default.locale=ko_KR
#default.locale=zh_CN
#default.locale=ja_JP
#default.locale=en_US

# 웹 페이지 및 클라이언트로 노출할 config.properties의 Key.
# JavaScript에서 config['KEY'] 형식으로 접근이 가능하다.
# 예) config['application.mode']
# config.properties Keys exposed to web pages and clients
# Can access values by using config['KEY'] in JavaScript.
# e.g. config['application.mode']
web.expose.keys=application.title,application.mode,default.locale,terminal.server.ip,terminal.server.port,terminal.max.session,monitoring.yarn.appmaster.disabled,system.admin.email,system.admin.name,file.upload.max.size,file.download.max.size,application.title,external.name,external.enabled,external.url,hdfs.viewFile.default.chunkSize,hdfs.viewFile.limit.type,spark.master.url,monitoring.yarn.appmaster.disabled,realTime.d2.url

# 로그인시 표시하는 시작 페이지의 ExtJS Namespace
# ExtJS namespace used in the start page after logged in.
web.start.page=Flamingo2.view.monitoring.resourcemanager.ResourceManager

# 시작 페이지를 다른 페이지로 대체하고 싶은 경우 사용하며 이 경우 아래의 주석을 모두 uncomment 처리한다.
# To replace the start page, uncomment the following options.
#web.start.page=Flamingo2.view.main.Intro
#web.start.additional.page=/intro

# Flamingo 로그인시 ? 아이콘을 선택하는 경우 화면에 표시할 메뉴얼 페이지의 URL.
# The manual page URL linked to the ? icon
web.manual.page=/resources/manual/index.html

# Tomcat Cross Context 설정
tomcat.cross.context=true

###########################################
## System Configuration
###########################################

# Flamingo의 홈 디렉토리로써 일반적으로 Tomcat이 설치된 디렉토리를 지정한다.
# Flamingon's home directory is Tomcat install location
flamingo.home=${catalina.home}

# Apache Hadoop의 환경설정 정보를 담고 있는 /WEB-INF/hadoop.properties 파일에서 Flamingo에 로그인시 기본으로 표시할 클러스터의 식별자.
# /WEB-INF/hadoop.properties 파일 의engine.qualifiers 값중 하나로 지정한다.
# A default cluster identifier. Located in /WEB-INF/hadoop.properties, a Hadoop configuration file.
system.qualifier=default

###########################################
## Terminal Configuration
###########################################

# Flamingo의 리모트 터미널 사용시 리모트 터미널을 제공하는 리모트 터미널 서버의 접속 정보.
# ROOT 계정으로 해당 서버에 node.js 기반의 터미널 서버를 설치하도록 한다.
# Flamingo's remote terminal server info.
# Install Node.js in the server as root
terminal.server.ip=exo2.cdh.local
terminal.server.port=9191

# Flamingo의 리모트 터미널 사용시 동시에 사용자당 사용할 수 있는 터미널의 개수.
# Maximum allowed remote terminal session
terminal.max.session=4

###########################################
## Monitoring Configuration
###########################################

# YARN Application Master와 동일 네트워크에 존재하는 경우 false로 설정하며 true로 설정하는 경우 YARN Application 모니터링 화면에서 Application Master가 활성화 된다.
# When users and YARN ApplicationMaster are on the same network, set the following option to false. If they are on different networks, setting it to true will enable Application Master in YARN Application Monitor
monitoring.yarn.appmaster.disabled=false

###########################################
## External Configuration
###########################################

# 로그인 후 메인 페이지의 우측 상단의 아이콘을 활성화할지 여부.
# 이 값이 false인 경우 메인 페이지의 우측 상단의 아이콘을 누르더라도 동작하지 않는다.
# Enabling the external link
# If the following property is set to false, the external link in the upper right corner of the start page will not work.
external.enabled=true

# 로그인 후 메인 페이지의 우측 상단의 아이콘의 마우스를 올리는 경우 표시하는 tooltip.
# Tooltip for the external link icon.
external.name=Cloudera Manager

# 로그인 후 메인 페이지의 우측 상단의 아이콘을 선택하는 경우 접속할 외부 사이트의 URL.
# A URL of the external link icon.
external.url=http://exo2.cdh.local:7180

###########################################
## License Configuration
###########################################

# Flamingo 라이센스 파일의 위치
# Path of the flamingo license file
license.file.path=${flamingo.home}/lic

# Server ID의 암호키
# Encryption keys of the server ID
licence.encoder.secret1=8ce2f043da98b4ae
licence.encoder.secret2=1a632ae94d9748cc

# 라이센스 파일명
# License filename
license.filename=license

###########################################
## Security Configuration
###########################################

# Flamingo의 사용자 관리시 패스워드를 암호화하게 되며 이때 패스워드를 암호화하기 위한 암호화 Key이다.
# 운영중에 이 값을 변경하면 기존의 사용자는 로그인할 수 없다.
# The encryption keys for user password.
# If these values are altered, current users cannot log in
security.password.encoder.secret1=Bar12345Bar12345
security.password.encoder.secret2=ThisIsASecretKet

###########################################
## User Home Configuration
###########################################

# 관리자가 사용자를 승인하는 경우 System Agent가 리눅스 사용자 계정을 생성하는 경우 홈 디렉토리.
# 관리자가 사용자를 승인하는 경우 System Agent에 리눅스 사용자 계정의 생성을 요청하고 이때 사용자 계정은 user.home.linux.path에서 지정한 디렉토리의 밑에 사용자 게정이 생성된다.
# 예를 들면 cloudine 이라면 /data1/cloudine에 사용자 계정이 생성된다.
# user.system.agent.apply=true 인 경우에만 동작한다.
# When a user's initial registration is approved by a sytem administrator, the system agent creates a home directory for the user.
# The user's home directory is created under a folder set to user.home.linux.path
# For example, if the user is cloudine the cloudine's home directory is /data1/cloudine
# This rule applies only if user.system.agent.apply is set to true
user.home.linux.path=/data1

# 관리자가 사용자를 승인하는 경우 HDFS에 사용자 홈 디렉토리를 생성한다.
# user.home.hdfs.path로 지정한 경로 밑에 사용자명의 디렉토리를 생성한다.
# 예) cloudine 계정을 생성하는 경우 /user/cloudine이 생성된다.
# When a user's initial registration is approved by a system administrator, a user's home directory is created in HDFS.
# The home directory is created under a folder set to user.home.hdfs.path.
## e.g. If the user is cloudine, the home directory is /user/cloudine
user.home.hdfs.path=/user

###########################################
## System Administrator Configuration
###########################################

# Flamingo 사용중 에러가 발생하는 경우 경고창에 표시할 정보.
# When an error occurred, the following system administrator's contact info will be shown on the pop-up
system.admin.name=Administrator
system.admin.email=user@opencloudengine.org

###########################################
## DataSource Configuration
###########################################

# Flamingo가 사용하는 MySQL 정보.
# MySQL connection info for Flamingo
jdbc.driver= com.mysql.jdbc.Driver
jdbc.url=jdbc:mysql://localhost:3306/flamingo2?useUnicode=true&characterEncoding=UTF8&zeroDateTimeBehavior=convertToNull&autoReconnect=true
jdbc.username=root
jdbc.password=
jdbc.min.pool=3
jdbc.max.pool=30

###########################################
## RStudio Server Configuration
###########################################

# RStudio Server의 URL.
# RStudio Server URL
rserver.auth.url=http://exo2.cdh.local:8787/auth-public-key
rserver.signin.url=http://exo2.cdh.local:8787/auth-do-sign-in

###########################################
## ggplot2 Visualization Configuration
###########################################

# rdata 파일이 생성되는 임시 폴더.
# a temp folder for rdata files.
visual.rdata.tmp=${flamingo.home}/working/temp

# 최종 결과 이미지 파일이 생성되는 폴더.
# !! ${flamingo.home} 변수를 사용하면 작동하지 않음. 반드시 ${catalina.home}으로 사용해야함.!!
# Final result images folder
# !! If ${flamingo.home} is altered, it will not work. It must be set to ${catalina.home} !!
visual.output=${catalina.home}/working/r

###########################################
## Agent for System User Configuration
###########################################

# 시스템 에이전트의 URL.
# URL 형식은 Hostname:Port, URL은 반드시 콤마(,)로 구분해야 한다.
# System Agent URL
# URL format is Hostname:Port.
# URL must separate comma(,).
user.system.agent.urls=exo2.cdh.local:7070,exo3.cdh.local:7070

# 리눅스 및 플라밍고 사용자를 위한 시스템 에이전트 사용 유무 옵션.
# 이 옵션을 true로 설정하면 System Agent가 설치되어 있는 장비에 리눅스 계정이 생성된다.
# 리눅스 계정은 Flamingo의 관리자 권한을 가진 사용자가 사용자 관리에서 등록한 게정을 승인할 때 생성된다.
# System Agent는 ROOT로 실행해야 한다.
# The option for using the system agent in Linux and Flamingo
# If this option is true, the system agent adds a user in Linux.
# A linux user is created when a Flamingo administrator approves the user in the User Management.
# The system agent must be executed as root
user.system.agent.apply=true

# Spark Streaming 작업 수행을 위한 시스템 에이전트가 설치된 원격지 서버의 경로.
# Remote filesystem path installed system agent for handling spark streaming job.
user.system.agent.spark.home=cloudine/system-agent/spark

###########################################
## HDFS Browser Configuration
###########################################

# HDFS에 파일을 업로드할 때 허용하는 최대 파일의 크기.
# Max allowed size of uploading file
file.upload.max.size=100000000

# 파일 업로드의 기본 인코딩.
# Default encoding of uploading file
file.upload.default.encoding=UTF-8

# HDFS에서 파일을 다운로드할 때 허용하는 최대 파일의 크기.
# Max allowed size of downloading file
file.download.max.size=100000000

# HDFS 브라우저에서 절대로 삭제할 수 없는 경로의 Ant Pattern.
# Ant pattern of non-modifiable paths in the HDFS browser
hdfs.delete.forbidden.paths=/tmp/**/*,/tmp,/hbase/**/*,/user/hive/**/*,/usr/hive,/lib/**/*,/lib,/samples/**/*,/samples,/user,/user/admin,/user/hdfs,/user/history,/user/hive,/user/hue,/user/impala/,/user/oozie,/user/spark,/user/sqoop2,/user/gpadmin,/yarn,/yarn/**/*,/apps,/apps/**/*,/hawq_data,/hawq_data/**/*,/mapred,/mapred/**/*,/hive,/hive/**/*

# HDFS 브라우저에서 파일을 내용을 표시할 때 한번에 표시하는 Chunk의 크기.
# Chunk size for previewing files in the HDFS browser.
hdfs.viewFile.default.chunkSize=10000

# HDFS 브라우저에서 파일의 내용을 표시할 때 파일의 내용을 볼 수 없는 확장자 목록.
# Non previewable file types in the HDFS browser.
hdfs.viewFile.limit.type=.gz|.tar|.jar|.zip|.rar|.alz|.lzo|.snappy|.gif|.jpg|.png|.mp3|.mp4|.xls|.doc|.ppt|.xlsx|.docx|.pptx

###########################################
## Hadoop Configuration
###########################################

# MapR 배포판인 경우 이 설정을 true로 지정합니다.
# If using a MapR distribution, set the following to true
mapr.enabled=false

###########################################
## Workflow Configuration
###########################################

# 워크플로우 디자이너에서 MapReduce 실행시 의존 Dependency를 다운로드하는 Maven Repository URL.
# Maven repository URL for dependency of MapReduce jobs in the workflow designer.
maven.repository.url=http://maven.opencloudengine.org/content/groups/public

# 다운로드한 JAR 파일을 캐슁할지 여부.
# 이 값을 false로 설정하면 Maven Repository에서 워크플로우가 실행할 때 마다 MapReduce JAR, Java JAR를 다운로드한다.
# MapReduce JAR, Java JAR의 변경이 잦은 경우 이 값을 false로 설정한다.
# Caching downloaded JARs
# If the option is false, JARs are downloaded from the Maven repository every time workflows are executed.
# If MapReduce JARs, and Java JARs are frequently modified, set it to false.
artifact.caching=true

# artifact.caching 옵션을 true로 설정한 경우 JAR 파일을 캐슁할 디렉토리.
# Artifact caching directory
artifact.cache.path=${flamingo.home}/working/cache

# JDK 7이 설치되어 있는 경로.
# Java install location
java.home=/usr/local/java/jdk7

# Apache Hadoop EcoSystem이 설치되어 있는 경로.
# 이 경로는 배포판 마다 다르므로 확인하여 설정하도록 한다.
# 예를 들어 hadoop.home의 경우 hadoop 커맨드가 있는 디렉토리가 <PARENT>/bin 인 경우 <PARENT>를 지정하도록 한다.
# Apache Hadoop EcoSystem install location
# Each distribution are installed in different locations, so you must check them first.
# For example, hadoop.home is where Hadoop is installed. If a hadoop executable is installed in <PARENT>/bin, <PARENT> is the Hadoop install location.
hadoop.home=/opt/cloudera/parcels/CDH/lib/hadoop
hive.home=/opt/cloudera/parcels/CDH/lib/hive
pig.home=/opt/cloudera/parcels/CDH/lib/pig
sqoop.home=/opt/cloudera/parcels/CDH/lib/sqoop
spark.home=/opt/cloudera/parcels/CDH/lib/spark
mahout.home=/opt/cloudera/parcels/CDH/lib/mahout

# HADOOP_HDFS_HOME 환경변수값
# HADOOP_HDFS_HOME environment variable
hadoop.hdfs.home=/opt/cloudera/parcels/CDH-5.4.0-1.cdh5.4.0.p0.27/lib/hadoop-hdfs

# HADOOP_MAPRED_HOME 환경변수값
# HADOOP_MAPRED_HOME environment variable
hadoop.mapred.home=/opt/cloudera/parcels/CDH-5.4.0-1.cdh5.4.0.p0.27/lib/hadoop-mapreduce

# R 커맨드가 있는 디렉토리.
# 이 디렉토리에 R이 없으면 워크플로우에서 R을 실행할 수 없다.
# R executable intall location
# I the R executable is not in r.home, R will not work in the workflow designer.
r.home=/usr/bin

# 워크플로우 디자이너에서 MapReduce Job 실행시 적용할 리눅스 사용자 계정.
# 일반적으로 이 계정은 Resource Manager의 실행 사용자 계정을 입력한다.
# Hive의 SELECT 등의 쿼리가 실행할 떄 /tmp/hadoop-${username}으로 적용할 떄에도 사용한다.
# A Linux user who is able to execute MapReduce jobs in the workflow designer.
# Mostly this is the user who can execute ResourceManager.
# This option is also applied to /tmp/hadoop=${username} when a SELECT query is executed in Hive
hadoop.user.name=yarn

# Spark Standalone Mode 사용사 Spark Master URL
# Spark Master URL when Spark is in standalone mode
spark.master.url=spark://exo2.cdh.local:7077

# Java 커맨드로 Spark Streaming 애플리케이션을 실행하는데 필요한 Spark Library 경로
spark.examples.jar.path=/opt/cloudera/parcels/CDH/lib/spark/lib/spark-examples.jar

# Java 커맨드로 Spark Streaming 애플리케이션을 실행하는데 필요한 Class Path 옵션
spark.classPath=/opt/cloudera/parcels/CDH/lib/spark/conf:/opt/cloudera/parcels/CDH/lib/spark/lib/spark-assembly-1.3.0-cdh5.4.0-hadoop2.6.0-cdh5.4.0.jar:/opt/cloudera/parcels/CDH-5.4.0-1.cdh5.4.0.p0.27/lib/hadoop/client/*:/opt/cloudera/parcels/CDH-5.4.0-1.cdh5.4.0.p0.27/lib/hadoop/client/*:/opt/cloudera/parcels/CDH-5.4.0-1.cdh5.4.0.p0.27/lib/hive/lib/*:/opt/cloudera/parcels/CDH-5.4.0-1.cdh5.4.0.p0.27/lib/flume-ng/lib/*:/opt/cloudera/parcels/CDH-5.4.0-1.cdh5.4.0.p0.27/lib/hadoop/../parquet/lib/*:/opt/cloudera/parcels/CDH-5.4.0-1.cdh5.4.0.p0.27/lib/hadoop/../avro/*

# Java 커맨드로 Spark Streaming 애플리케이션을 실행하는데 필요한 옵션
spark.submit=org.apache.spark.deploy.SparkSubmit

# Flamingo의 워크플로우 실행시 로그를 생성하는 로깅 디렉토리.
# 이 디렉토리가 Flamingo가 실행하는 리눅스 계정으로 생성되어 있어야 하며 권한이 없는 경우 워크플로우 실행시 에러가 발생할 수 있다.
# Logging directory for Flamingow workflows.
# This directory must be owned by a user who executes Flamingo. Otherwise, workflows might not work.
flamingo.workflow.logging.dir=${flamingo.home}/working/logs

# Flamingo MapReduce Job Agent의 절대경로.
# 이 Flamingo의 MapReduce Job Agent는 MapReduce Job ID, YARN Application ID를 추출하는데 사용한다.
# 따라서 이 경로를 제대로 설정하지 않으면 실행중인 워크플로우를 강제 종료할 수 없다.
# 생성된 MapReduce Job ID와 YARN Application ID는 flamingo.workflow.logging.dir 으로 설정한 디렉토리에 생성된다.
# 예) MapReduce의 경우 hadoop.<MAPREDUCE_JOB_ID>로 된 파일이 생성됨
# 예) YARN Application의 경우 app.<APPLICATION_ID>로 된 파일이 생성됨
# Flamingo MapReduce Job Agent's absolute path
# Flamingo MapReduce Job Agent retrieves MapReduce job IDs, and YARN application IDs.
# Running jobs cannot be force-killed if this option is improperly configured.
# e.g. For MapReduce jobs, hadoop.<MAPREDUCE_JOB_ID> files get created.
# e.g. For YARN applications, app.<APPLICATION_ID> files get created.
flamingo.mr.agent.jar.path=${flamingo.home}/working/lib/flamingo2-hadoop2-mr-agent-2.1.0-SNAPSHOT.jar

# Mahout MapReduce JAR 파일의 HDFS 경로.
# 각 배포판에서 제공하는 Mahout MapReduce JAR 파일은 각 배포판에 있으며 파일명은 반드시 *-job.jar가 끝나는 파일을 지정하도록 한다.
# *-job.jar로 끝나는 파일의 경우 JAR파일의 /lib에 각종 의존하는 .jar 파일을 포함하고 있으므로 용량이 컴파일한 용량보다 크다.
# Mahouth MapReduce JAR file path in HDFS.
# Each distribution contains their own Mahout MapReduce JAR file, and its name ends with *-job.jar
# Mahout MapReduce JAR files contains all dependecny JAR files, so its size is much bigger.
mahout.mapreduce.jar.path=/sample/mrlib/mahout-examples-0.10.1-job.jar

# Flamingo MapReduce JAR 파일의 HDFS 경로.
# Flamingo MapReduce JAR file path in HDFS
flamingo.mapreduce.jar.path=/sample/mrlib/flamingo2-mapreduce-hadoop2-2.1.0-SNAPSHOT-job.jar

# Pig 스크립트가 생성되는 임시 디렉토리
# Pig script temp directory
pig.temp.dir=${flamingo.home}/working/temp

